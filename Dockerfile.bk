FROM local.gdssingapore:python3.11
COPY --chown=app:app . ./
USER app
CMD ["bash", "-c", "streamlit run main.py --server.port=$PORT"]

# ARG ARCH=
# FROM ${ARCH}gdssingapore/airbase:python-3.13 AS build-stage0
# ENV PYTHONUNBUFFERED=TRUE
# RUN apt-get update && \
#     apt-get install -y python3.11 python3.11-dev python3.11-venv python3.11-distutils python3-pip && \
#     apt-get clean

# #Create and activate a Python 3.11 virtual environment
# RUN python3.11 -m venv /opt/venv311
# ENV PATH="/opt/venv311/bin:$PATH"

# RUN python --version
# RUN pip --version
# COPY --chown=app:app requirements.txt ./
# #RUN python3.11 -m pip install -r requirements.txt
# RUN pip install -r requirements.txt

# ARG ARCH=
# FROM ${ARCH}gdssingapore/airbase:python-3.13
# COPY --chown=app:app . ./
# USER app
# CMD ["bash", "-c", "streamlit run main.py --server.port=$PORT"]


# apt-get update
# apt-get install -y build-essential zlib1g-dev libncurses5-dev \
# libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev \
# libsqlite3-dev wget libbz2-dev

# # 2. Download Python 3.11.13
# wget https://www.python.org/ftp/python/3.11.13/Python-3.11.13.tar.xz

# # 3. Verify checksum (optional but recommended)
# echo "a2a8c1d8a10e9f661a92eef6b21a1d4 Python-3.11.13.tar.xz" | md5sum --check

# # 4. Extract and compile
# tar -xf Python-3.11.13.tar.xz
# cd Python-3.11.13
# ./configure --enable-optimizations
# make -j $(nproc)
# make altinstall


# apt install -y software-properties-common
# # Update CA certificates
# apt install --reinstall ca-certificates
# # 1. Add the PPA
# add-apt-repository ppa:deadsnakes/ppa

# # 5. Verify installation
# python3.11 --version
##############################################
# Ubuntu Custom Build 3.11 Image
##############################################
# FROM ubuntu:jammy

# # Install Python and basic shell utilities first
# RUN apt-get update && \
#     apt-get install -y python3.11 python3.11-dev python3.11-venv python3.11-distutils python3-pip && \
#     apt-get clean

# #Verify Python version
# RUN python3 --version && \
#     python3.11 --version && \
#     python3 -m pip --version

# ENV PYTHONUNBUFFERED=TRUE
# COPY --chown=app:app requirements.txt ./
# RUN pip install -r requirements.txt
# COPY --chown=app:app . ./
# USER app
# CMD ["bash", "-c", "streamlit run main.py --server.port=$PORT"]

##############################################
# GDS Build Image
##############################################


#new

##############################################
# Modify GDS Build Image to use Python 3.11
##############################################
# FROM gdssingapore/airbase:python-3.13
# # 1. Install Python 3.11 alongside existing Python
# RUN apt-get update && \
#     apt-get install -y python3.11 python3.11-dev python3.11-venv python3.11-distutils python3-pip && \
#     apt-get clean

# # 2. Set Python 3.11 as default
# RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1 && \
#     update-alternatives --install /usr/bin/python python /usr/bin/python3.11 2 && \
#     update-alternatives --set python3 /usr/bin/python3.11 && \
#     update-alternatives --set python /usr/bin/python3.11

# RUN python3.11 -m pip --version

# # 3. Verify Python version
# # RUN python3 --version && \
# #     python3.11 --version && \
# #     python3 -m pip --version

# # 2. Create and activate a Python 3.11 virtual environment
# # RUN python3.11 -m venv /opt/venv311
# # ENV PATH="/opt/venv311/bin:$PATH"

# # 4. Set environment variables
# ENV PYTHONUNBUFFERED=TRUE
# ENV PIP_BREAK_SYSTEM_PACKAGES=1

# # 5. Install requirements
# COPY --chown=app:app requirements.txt ./
# RUN python3.11 -m pip install -r requirements.txt

# # 6. Copy application code
# COPY --chown=app:app . ./

# # 7. Switch to non-root user
# USER app

# # 8. Run Streamlit
# CMD ["bash", "-c", "python3.11 -m streamlit run app.py --server.port=$PORT"]